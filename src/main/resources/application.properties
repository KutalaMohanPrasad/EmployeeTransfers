spring.application.name=EmployeeTransfers
spring.datasource.url=jdbc:postgresql://localhost:5435/postgres
spring.datasource.username=postgres
spring.datasource.password=12345
spring.datasource.driver-class-name=org.postgresql.Driver
spring.mvc.pathmatch.matching-strategy=ant-path-matcher

spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.jpa.hibernate.ddl-auto= update
spring.jpa.show-sql=true


####Queries
getEmployee.details=SELECT e.*,d.dname,d.loc from employees e LEFT JOIN department d ON e.dep_id=d.deptno
update.Employee=UPDATE employees SET name=?, job_name=?, manager_id=?, salary=?, commission=?, dep_id=? WHERE emp_id=?
delete.Employees=DELETE FROM employees WHERE emp_id IN (?)
create.Employee=INSERT INTO employees (name, job_name, manager_id, hire_date, salary, commission, dep_id) VALUES ( ?, ?, ?, ?, ?, ?, ?)
create.department=INSERT INTO department (deptno,dname,loc) VALUES (?,?,?)